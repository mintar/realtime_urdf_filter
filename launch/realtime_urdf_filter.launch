<launch>
  <!-- run as nodelet? (this crashes a lot!) -->
  <arg name="nodelet" default="true"/>
  <arg name="camera" default="head_mount_kinect" />

  <param name="use_sim_time" value="true" />

  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="camera" value="$(arg camera)" />
    <arg name="depth_registration" value="true" />
    <arg name="load_driver" value="false" />
    <arg name="publish_tf" value="false" />
  </include>

  <!-- Load the PR2 URDF -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find pr2_description)/robots/pr2.urdf.xacro'"/>

  <group ns="$(arg camera)">
    <!-- Nodelet manager -->
    <node pkg="nodelet" type="nodelet" args="manager" name="$(arg camera)_nodelet_manager_filtered" output="screen" />

    <!-- Launch nodelet -->
    <node if="$(arg nodelet)" pkg="nodelet" type="nodelet" name="realtime_urdf_filter_nodelet" args="load realtime_urdf_filter/RealtimeURDFFilterNodelet $(arg camera)_nodelet_manager_filtered --no-bond" output="screen">
      <remap from="~input_depth" to="depth_registered/hw_registered/image_rect_raw"/>
      <remap from="depth_registered/hw_registered/camera_info" to="depth_registered/camera_info"/>
      <remap from="~output_depth" to="depth_registered_filtered/hw_registered/image_rect_raw" />
      <remap from="~output_mask" to="/urdf_filtered_mask" />

      <rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
    </node>

    <node unless="$(arg nodelet)" pkg="realtime_urdf_filter" type="realtime_urdf_filter" name="$(anon realtime_urdf_filter)" output="screen">
      <remap from="~input_depth" to="depth_registered/hw_registered/image_rect_raw"/>
      <remap from="depth_registered/hw_registered/camera_info" to="depth_registered/camera_info"/>
      <remap from="~output_depth" to="depth_registered_filtered/hw_registered/image_rect_raw" />
      <remap from="~output_mask" to="/urdf_filtered_mask" />

      <rosparam command="load" file="$(find realtime_urdf_filter)/launch/filter_parameters.yaml"/>
    </node>

    <!-- Convert filtered depth image to point cloud -->
    <node pkg="nodelet" type="nodelet" name="$(arg camera)_points_xyzrgb_filtered"
      args="load depth_image_proc/point_cloud_xyzrgb $(arg camera)_nodelet_manager_filtered" output="screen">
      <remap from="depth_registered/image_rect" to="depth_registered_filtered/hw_registered/image_rect_raw"/>
      <remap from="depth_registered/points" to="depth_registered/filtered_points"/>
    </node>
  </group>
</launch>

